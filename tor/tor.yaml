apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: tor
  annotations:
    pv.beta.kubernetes.io/gid: "65533"
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: do-block-storage
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tor-role
subjects:
- kind: ServiceAccount
  name: tor
roleRef:
  kind: Role
  name: tor-role
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: default
  name: tor-role
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["services"]
  verbs: ["get"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tor
  namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: tor
spec:
  type: LoadBalancer
  ports:
  - port: 9001
    protocol: TCP
    targetPort: 9001
  selector:
    app: tor
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tor
  template:
    metadata:
      labels:
        app: tor
    spec:
      securityContext:
        fsGroup:  65533
      serviceAccountName: tor
      initContainers:
      - name: init-tor-service-wait
        image: bitnami/kubectl:latest
        command: ['/bin/bash']
        args: ['-c', 'until [[ $(kubectl get service tor -o jsonpath=''{.status.loadBalancer.ingress[0].ip}'') ]]; do echo wait; sleep 5; done;']
      - name: init-tor
        image: bitnami/kubectl:latest
        command: ['/bin/sh']
        args: ['-c', 'kubectl get service tor -o jsonpath=''{.status.loadBalancer.ingress[0].ip}'' > /config/ip']
        volumeMounts:
        - name: config
          mountPath: /config
      - name: init-var-lib
        image: busybox:latest
        command: ['/bin/sh']
        args: ['-c', 'chown 100:65533 /var/lib/tor/.tor']
        volumeMounts:
        - name: tor
          mountPath: /var/lib/tor/.tor/
      containers:
      - name: tor
        image: jess/tor-relay
        command: ['/bin/sh']
        args: ['-c', 'echo Address $(cat /config/ip) >>  /etc/tor/torrc.middle && ./run.sh']
        ports:
        - containerPort: 9001
        env:
        - name: RELAY_NICKNAME
          value: "kubernetor"
        volumeMounts:
        - name: tor
          mountPath: /var/lib/tor/.tor/
        - name: config
          mountPath: /config
      volumes:
      - name: tor
        persistentVolumeClaim:
          claimName: tor
      - name: config
        emptyDir: {}

 
---
